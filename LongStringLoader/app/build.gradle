apply plugin: 'com.android.library'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:24.2.0'
    androidTestCompile 'com.android.support.test:runner:0.4'
    androidTestCompile 'com.android.support.test:rules:0.4'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    destinationDir = file("build/javadoc")
    failOnError false
}

task createJavaDocJar(type: Jar) {
    from ('build/javadoc')
    destinationDir file('build')
    baseName = 'longstringloader-' + android.defaultConfig.versionName + '-javadoc'
}
createJavaDocJar.dependsOn(javadoc)

task createSourcesJar(type: Jar) {
    from ('src/main/java/com/penrillian/longstringloader')
    destinationDir file('build')
    baseName = 'longstringloader-' + android.defaultConfig.versionName + '-sources'
    include('*.java')
}

task createJars(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('build')
    include('classes.jar')
    rename('classes.jar', ('longstringloader-' + android.defaultConfig.versionName + '.jar'))
}
createJars.dependsOn(clean, build, createSourcesJar, createJavaDocJar)
createJavaDocJar.mustRunAfter build
createSourcesJar.mustRunAfter build
build.mustRunAfter clean
